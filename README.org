* Leptus [[https://travis-ci.org/s1n4/leptus][https://travis-ci.org/s1n4/leptus.png?branch=master]]

  Leptus is an Erlang REST framework that runs on top of cowboy.

  Leptus aims at simply creating RESTful APIs.

** Requirements

   - Erlang/OTP R15B or newer
   - [[https://github.com/extend/cowboy][cowboy]]
   - [[https://github.com/davisp/jiffy][jiffy]] or [[https://github.com/talentdeficit/jsx][jsx]]
   - [[https://github.com/msgpack/msgpack-erlang][msgpack]]

** Installation

   Clone it and just run ~make~

   OR

   If you want to use it as a dependency in your project add the following to
   your rebar configuration

   #+BEGIN_SRC
   {deps, [
           ...
           {leptus, ".*", {git, "git://github.com/s1n4/leptus.git", {branch, "master"}}}
          ]}.
   #+END_SRC

   NOTE: if you prefer [[https://github.com/talentdeficit/jsx][jsx]] rather than [[https://github.com/davisp/jiffy][jiffy]]
   the environment variable ~USE_JSX~ must be set to ~true~ when getting
   dependencies and/or compiling.

   i.e.
   #+BEGIN_SRC
   USE_JSX=true make
   # OR
   USE_JSX=true rebar get-deps compile
   #+END_SRC

** Quick example

   #+BEGIN_SRC erlang
   -module(hello).
   -compile({parse_transform, leptus_pt}).

   %% leptus callbacks
   -export([init/3]).
   -export([get/3]).
   -export([terminate/4]).

   init(_Route, _Req, State) ->
       {ok, State}.

   get("/", _Req, State) ->
       {<<"Hello, leptus!">>, State};
   get("/hi/:name", Req, State) ->
       Status = ok,
       Name = leptus_req:param(Req, name),
       Body = [{<<"say">>, <<"Hi">>}, {<<"to">>, Name}],
       {Status, {json, Body}, State}.

   terminate(_Reason, _Route, _Req, _State) ->
       ok.
   #+END_SRC

   #+BEGIN_SRC
   $ erl -pa ebin deps/*/ebin
   #+END_SRC

   #+BEGIN_SRC erlang
   1> c(hello).
   2> leptus:start_listener(http, [{'_', [{hello, undefined_state}]}]).
   Leptus started on http://127.0.0.1:8080
   #+END_SRC

   #+BEGIN_SRC
   $ curl localhost:8080/hi/Leptus
   {"say":"Hi","to":"Leptus"}
   #+END_SRC

** Features

   - Supports ~GET~, ~PUT~, ~POST~ and ~DELETE~ HTTP methods
   - Can respond in plain text, JSON or MessagePack
   - Supports basic authentication
   - Can be upgraded while it's running (no stopping is required)
   - Supports HTTPS and SPDY
   - Provides a simple way for dealing with Cross-Origin Resource Sharing

** Documentation

   Check out the [[docs][docs]] directory.

** Support

   - [[https://github.com/s1n4/leptus/issues][Issue tracker]]
   - #leptus IRC channel on Freenode
   - [[https://groups.google.com/group/leptus][leptus]] mailing-list on Google Groups

** License

   MIT, see LICENSE file for more details.
